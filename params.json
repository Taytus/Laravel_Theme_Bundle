{"name":"Laravel theme bundle","body":"# Theme Bundle for Laraval framework\r\nThis bundle will help better organize the skin/theme of laravel applications. The bundle is designed to work as a wrapper to all the views loaded through laravel routes including controllers and those that sit under bundles.\r\n\r\n## How to Install\r\nInstallation is fairly easy as you would download and install any other bundle for laravel the same way.\r\nDownload this bundle and copy the directory **Theme** and its file into the laravel bundles directory.\r\n\r\n\r\nYou can install this bundle by running the following CLI command:\r\n``` \r\nphp artisan bundle:install Theme\r\n```\r\n\r\nAlternatively you can download it directly from GitHub:\r\n```\r\nhttp://github.com/raftalks/Laravel_Theme_Bundle\r\n```\r\n\r\n That's it, congratulations you have installed the bundle. \r\n\r\nNow go to your public directory and create a new directory called themes (/public/themes/). You will use this directory to add your themes.\r\n\r\nAlmost done.\r\n\r\nWait.. you need to do few settings before you can start using Theme Bundle.\r\n\r\n## Configuration\r\nActivate Theme Bundle by editing path/to/laravel/application/bundles.php\r\nfile and adding the following into the array.\r\n```\r\nreturn array(\r\n    'theme'=>array('auto' => true)\r\n);\r\n\r\n```\r\nNotice that we need to register the bundle with auto loading configuration enabled.\r\n\r\n#How to create a theme\r\n\r\n##Structure of a theme\r\n* Theme Route directory : public/themes/<ThemeName>/\r\n* Theme Assets directory: public/themes/<ThemeName>/assets/  can contain js/, css/, img/ sub directories\r\n* Theme Layouts: public/themes/<ThemeName>/layouts/ this will contain all the layouts of the theme\r\n* Theme Partials: public/themes/<ThemeName>/partials/ this will contain partial html to be used in layouts\r\n* Theme Function File: public/themes/<ThemeName>/theme_function.php , this file will help setting up your theme assets, bind composer function to theme partials, etc.\r\n\r\n# How to use Theme Bundle within your application\r\nIt's easy, you will need to replace laravels' View::make() to $theme->render()\r\n\r\nPlease note that Theme is used as a library and to make it available to all other areas of laravel framework, the library is registered inside Laravels' IoC container. You can find the code inside the start.php file of this bundle.\r\n\r\nBefore you can start using the instance of the Theme library, you will need to pass that instance to your variable, preferably set it as $theme. To do this, you can use the following code inside your route or controller.\r\n```\r\n$theme = IoC::resolve('Theme');\r\n\r\n```\r\n\r\n### Set Theme\r\nTo set the theme to be used with all the views, you may edit the file theme.php in the Theme bundle or pass the name of the theme object as shown below.\r\n` $theme->set_theme(\"admin\") ; //sets the library to use Admin theme from directory public/themes/admin `\r\n\r\n### Set Layout to wrap your view\r\nThis is very useful. For example, you have separate layout for home page, blog list, post page, etc. \r\n```\r\nfunction action_index(){\r\n  $theme = IoC::resolve('Theme');\r\n\r\n  $theme->set_layout('home'); // for controller action_index\r\n  ...\r\n```\r\nIn your layout files, you should include the following code in order to load the generated view from your application.\r\n```\r\n<?php echo $theme_content; ?>\r\n```\r\n\r\n### Using Partials\r\nPartials are considered like html entities that represent theme UI element group etc. For example the Navigation menu or Side bar listing related posts etc. Dynamic data needed for partials can be passed through composer method provided in this Theme library. You can also use helper function to load a partial file without initially binding it to the $theme object.\r\n\r\nExample 1. Binding a partial to the $theme object before rendering the theme.\r\n```\r\n     $theme->theme_partial('main_navigation');\r\n     $theme->theme_partial('sidebar');\r\n```\r\n\r\nExample 2. Loading a partial directly without binding the partial as done above.\r\n```\r\n    //inside layout file home.php\r\n    <div id='navigation_container'>\r\n       <?php echo theme_partial(\"main_navigation\"); ?>\r\n    </div>\r\n    // you can use this as well, partial set as a variable prefixed with \"theme_\"\r\n      <?php echo $theme_main_navigation;?>\r\n```\r\n\r\nExample 3. Passing data to partial\r\n```\r\n$theme->theme_partial('main_navigation', $data);\r\n<?php echo theme_partial(\"main_navigation\", $data); ?>\r\n```\r\n\r\n### Binding Theme Partial with Composer\r\nOne thing I like most about laravel is its View Composer. This theme library supports composer binding to theme partial to pass processed data through function callback.\r\nExample.\r\n```\r\n $theme->composer('main_navigation', function($view){\r\n            $view->with('theme_main_navigation', \"This is loaded from composer of the theme.\");\r\n });\r\n```\r\n\r\n### Using theme_function.php\r\nThis file sites in the root your theme folder. The function inside this file must always be named according to the pattern function theme_<theme_name>. The function must have one parameter that will get passed with instance of the theme object.\r\n\r\nExample:\r\n```\r\nfunction theme_admin($theme){\r\n     $theme->add_asset('bootstrap.min.css');\r\n     $theme->add_asset('jquery-1.7.2.min.js');\r\n     $theme->add_asset('bootstrap.min.js');\r\n     $theme->theme_partial('header');\r\n     $theme->theme_partial('footer');\r\n}\r\n```\r\n\r\n### Theme Assets & other methods\r\nThere are many other functions such as registering theme assets to be loaded to the layout.\r\nExample\r\n```\r\n$theme->add_asset('style.css');\r\n```\r\nIn the theme layout or partial file containing the head tag of the html layout can load the asset files easily with following code.\r\n```\r\n<html>\r\n<head>\r\n<title><?php echo $theme_data['title']; ?></title>\r\n    <?php echo $theme_data['metadata']; ?>\r\n</head>\r\n...\r\n```\r\n### Page title tag\r\nAs you can see in above example, the title tag contain `$theme_data['title']` to set the title string passed by the following method.\r\n```\r\n$theme->title(\"Welcome\");\r\n```\r\n\r\nIt is always best to explode the file theme.php in this bundle, to understand the methods available as some of them and advanced features of it is not explained in here.\r\n\r\nPlease feel free to use this bundle at your own risk and let me know if you need any help. I am usually available at IRC channel of Laravel.\r\n\r\n\r\n\r\n\r\n","tagline":"Theme Bundle for laravel framework.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}